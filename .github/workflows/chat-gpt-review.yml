name: Chat GPT Review

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

env:
  PROMPT: 'Hello, can you tell me what is the meaning of life?'

jobs:
  generateResponse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn add axios
      - name: Generate response
        id: generate-response
        run: |
          response=$(curl https://api.openai.com/v1/completions \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"prompt\": \"${{ env.PROMPT }}\",
              \"max_tokens\": 1024,
              \"temperature\": 0.5,
              \"model\": \"text-davinci-003\"
            }")
          echo "::set-output name=response-data::$response"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  comment-on-pr:
    needs: generateResponse
    runs-on: ubuntu-latest
    steps:
      - name: Get response data from generateResponse
        id: get-response-data
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = JSON.parse('${{ needs.generateResponse.outputs.response-data }}');
            console.log('response', response);
            process.env.RESPONSE = JSON.stringify(response);
            console.log('RESPONSE_ENV: ', process.env.RESPONSE);
      - name: Post comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('RESPONSE_ENV: ', process.env.RESPONSE);
            const response = JSON.parse(process.env.RESPONSE);
            console.log('response', response);
            const comment = `Generated response: ${response.choices[0].text || response.completions[0].text}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
