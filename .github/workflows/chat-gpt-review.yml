# name: Code Review

# permissions:
#   contents: read
#   pull-requests: write

# on:
#   pull_request:
#     types: [opened, reopened, synchronize]

# jobs:
#   code_review:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: ChatGPT Code Review
#         uses: anc95/ChatGPT-CodeReview@main
#         with:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           MODEL: text-davinci-002
#           LANGUAGE: Chinese
#           top_p: 0.5
#           temperature: 0.5

#       - name: ChatGTP explain code
#         uses: cirolini/chatgpt-github-actions@v1.3
#         with:
#           openai_api_key: ${{ secrets.OPENAI_API_KEY }}
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           github_pr_id: ${{ github.event.number }}
#           openai_engine: 'text-davinci-002' #optional
#           openai_temperature: 0.5 #optional
#           openai_max_tokens: 2048 #optional
#           mode: file # file or patch

# name: Code Review

# permissions:
#   contents: read
#   pull-requests: write

# on:
#   pull_request:
#     types: [opened, reopened, synchronize]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           repository: ${{github.event.pull_request.head.repo.full_name}}
#           ref: ${{github.event.pull_request.head.ref}}
#           submodules: false

#       - uses: unsafecoerce/chatgpt-action@main
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           CHATGPT_ACCESS_TOKEN: ${{ secrets.CHATGPT_ACCESS_TOKEN }}
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#         with:
#           debug: true
#           action: score

#       - uses: unsafecoerce/chatgpt-action@main
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           CHATGPT_ACCESS_TOKEN: ${{ secrets.CHATGPT_ACCESS_TOKEN }}
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#         with:
#           debug: true
#           action: review
#           review_comment_lgtm: true

name: Chat GPT Review

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

env:
  PROMPT: 'Hello, can you tell me what is the meaning of life?'
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  generateResponse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn add axios
      - name: echo env
        run: |
          echo "action_state=yellow" >> $GITHUB_ENV
      - name: Generate response
        id: generate-response
        run: |
          echo "action_state: ${{ env.action_state }}"
          response=$(curl https://api.openai.com/v1/completions \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"prompt\": \"${{ env.PROMPT }}\",
              \"max_tokens\": 1024,
              \"temperature\": 0.5,
              \"model\": \"text-davinci-003\"
            }")
          echo "Response data: $response"
          echo "response=$response" >> $GITHUB_ENV
          echo "RESPONSE_ENV: ${{ env.response }}"
          echo $action_state
  comment-on-pr:
    needs: generateResponse
    runs-on: ubuntu-latest
    steps:
      - name: Post comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('start cemment!', '${{response}}')
            console.log('RESPONSE: ', process.env);
            const response = JSON.parse('${{ env.RESPONSE }}');
            console.log('response', response)
            const comment = `Generated response: ${response.choices[0].text || response.completions[0].text}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
